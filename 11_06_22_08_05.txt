1. 
SELECT table_name, owner
FROM all_tables
WHERE table_name LIKE'JO%'

2.
SELECT SUBSTR(first_name,1,1) 
|| ' ' || last_name 
FROM employees ;

3. 
SELECT first_name ||' ' || last_name, 
email 
FROM employees
WHERE email LIKE'%IN%';

4.
SELECT 
MIN(last_name) AS "First Last Name", 
MAX(last_name) AS "Last Last Name"
FROM employees

5. 
SELECT TO_CHAR(ROUND(salary/4.2),
('$99999.00'))
AS "Weekly Salary"
FROM employees
WHERE salary BETWEEN 700 AND 3000

6.
SELECT SUBSTR(e.first_name,1,1) ||' '|| e.last_name AS "Employee Name", j.job_title AS "Jobs"
FROM employees e, jobs j
WHERE e.job_id = j.job_id;

7.
SELECT SUBSTR(e.first_name,1,1) || ' ' || e.last_name AS 
"Employee Name", j.job_title AS "Jobs", MIN_SALARY ||'-'|| MAX_SALARY "Salary Range",e.salary "Employee's Salary"
FROM employees e, jobs j
WHERE e.job_id = j.job_id;

8.
SELECT SUBSTR(first_name,1,1) || ' ' || last_name AS "Employee Name", 
department_name
FROM employees
NATURAL JOIN departments;

9.
SELECT SUBSTR(first_name,1,1) || ' ' || last_name AS "Employee Name", 
department_name "Department Name"
FROM employees e
JOIN departments d ON(e.department_id = d.department_id);

10.
SELECT DECODE(manager_id, null,'Nobody','Somebody') 
"Works For",last_name "Last Name"
FROM employees;

11.
SELECT SUBSTR(first_name,1,1)||' '||
last_name "Employee Name", salary "Salary",
DECODE (commission_pct, null, 'No', 'Yes') Commission
FROM employees;

12.
SELECT E.last_name, D.department_name, L.city, L.state_province
FROM employees E
JOIN departments D  
ON E.department_id = D.department_id  
JOIN locations L
ON D.location_id = L.location_id
ORDER BY last_name;

13.
SELECT first_name "First Name", last_name "Last Name",
COALESCE(commission_pct, manager_id, commission_pct, -1) 
AS "Which Function???"
FROM employees

14.
SELECT E.last_name, E.salary, J.grade_level
FROM employees E
JOIN job_grades J
ON E.salary BETWEEN J.lowest_sal
AND J.highest_sal;

15.
SELECT E.last_name, D.department_name
FROM employees E
JOIN departments D
ON E.department_id = D.department_id;

16.
select level as potition, last_name, prior last_name as manager_name
from employees
start with employee_id = 100
connect by prior employee_id = manager_id;

17.
select min(Hire_date) as Lowest,max(Hire_date) as Highest,count(Last_name) as Number_Of_Employees 
from employees

18.
select department_name, salary as Salaries
from departments, employees
where salary >= 15000 and salary <= 31000
order by salary

19.
select d.department_name,d.manager_id, e.last_name as manager_name, avg(salary) as avg_dept_salary
from departments d
join employees e
on e.employee_id = d.manager_id
group by d.department_name, e.last_name, d.manager_id;

20.
select round(max(avg_sal)) as "Highest Avg Sal for Depts"
from (select department_id, avg(salary) as avg_sal
from employees
group by department_id);

21.
select department_name as "Department Name", month_salary as "Monthly cost"
from departments d, (select department_id, sum(salary) as month_salary
from employees
group by department_id) e
where d.department_id = e.department_id;

22.
SELECT department_name, job_id AS "Job Title", SUM(salary) AS "Monthly Cost"
FROM departments d
RIGHT JOIN employees e
ON d.department_id = e.department_id
GROUP BY d.department_name, e.job_id
ORDER BY d.department_name;

23.
SELECT department_name AS "Department Name", job_id AS "Job Title", SUM(salary) AS "Monthly Cost"
FROM employees
JOIN departements USING (department_id)
GROUP BY CUBE(department_name, job_id)
ORDEY BY department_name

24.
SELECT department_name AS "Department Name", job_id AS "Job Title", SUM(salary) AS "Monthly Cost",
DECODE(GROUPING(d.department_id), 0, 'Yes', 'No') AS "Department ID Used", DECODE(GROUPING(job_id), 0, 'Yes', 'No') AS "Job ID Used"
FROM employees e
JOIN departments d
ON e.department_id = d.department_id
GROUP BY CUBE(d.department_name, d.department_id, job_id)
ORDER BY department_name

25.
SELECT NULL AS department_name, job_id, NULL AS city, SUM(salary)
FROM employees
GROUP BY job_id
UNION ALL
SELECT department_name, NULL, NULL, NULL
FROM departments
UNION ALL
SELECT NULL, NULL, city, NULL
FROM locations;

26.
SELECT SUBSTR(first_name,1,1)||' '||last_name AS "Employee Name", department_id, NULL AS department_name, NULL AS city
FROM employees
UNION ALL
SELECT NULL, department_id, department_name, NULL
FROM departments
UNION ALL
SELECT NULL, NULL, NULL, city
FROM locations;

27.
SELECT SUBSTR(e.first_name,1,1)||' '||e.last_name AS "Employee Name", e.salary AS "Salaries", d.department_name AS "Department Name"
FROM employees e, departments d
WHERE e.salary > (SELECT AVG(salary) FROM employees)
AND e.department_id = d.department_id;